# Generated by Django 5.1.6 on 2025-02-19 22:56

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Medicament',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nom', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True, null=True)),
                ('forme', models.CharField(blank=True, choices=[('comprime', 'Comprimé'), ('sirop', 'Sirop'), ('gelule', 'Gelule'), ('pommade', 'Pommade'), ('injection', 'Injection')], max_length=150, null=True)),
                ('durée_traitement', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=150, verbose_name='Prénom')),
                ('last_name', models.CharField(max_length=150, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Adresse email')),
                ('role', models.CharField(choices=[('patient', 'Patient'), ('medecin', 'Medecin'), ('aidant', 'Aidant')], default='patient', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='IndicateurSante',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type_indicateur', models.CharField(choices=[('poids', 'Poids'), ('pression', 'Pression Arterielle'), ('glycemie', 'Glycemie')], max_length=100)),
                ('valeur', models.FloatField()),
                ('date_mesure', models.DateField(auto_now=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicateurs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('date_envoi', models.DateField()),
                ('heure_envoi', models.TimeField()),
                ('lu', models.BooleanField(default=False)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Planification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('debut_traitement', models.DateField()),
                ('fin_traitement', models.DateField()),
                ('heure_prise', models.TimeField()),
                ('date_fin', models.DateField()),
                ('heure', models.TimeField()),
                ('dose', models.CharField(max_length=150)),
                ('frequence', models.CharField(blank=True, choices=[('quotidien', 'Quotidien'), ('hebdomadaire', 'Hebdomadaire'), ('mensuel', 'Mensuel')], max_length=150, null=True)),
                ('medicament_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planifications', to='mediatheque.medicament')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoriquePrise',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_prise', models.DateField()),
                ('heure_prise', models.TimeField()),
                ('prise', models.BooleanField(default=False)),
                ('planification_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historiques', to='mediatheque.planification')),
            ],
        ),
        migrations.CreateModel(
            name='ProfilMedical',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('maladies_chroniques', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('medecin_traitant', models.TextField(blank=True, max_length=150, null=True)),
                ('historique', models.TextField(blank=True, null=True)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profil_medical', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rapport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('heure', models.TimeField()),
                ('message', models.TextField()),
                ('lu', models.BooleanField(default=False)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rapports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
